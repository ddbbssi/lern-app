{"ast":null,"code":"var _jsxFileName = \"/Users/diana/Downloads/lern-app/src/pages/Kontrollfragen.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport kontrollfragen from \"../daten/Kontrollfragen_HF1bis4.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Kontrollfrage = ({\n  nummer,\n  frage,\n  antwort\n}) => {\n  _s();\n  const [showAntwort, setShowAntwort] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: \"1px solid #ccc\",\n      borderRadius: \"8px\",\n      padding: \"1rem\",\n      marginBottom: \"1rem\",\n      backgroundColor: \"#f9f9f9\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Frage \", nummer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: frage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowAntwort(!showAntwort),\n      children: showAntwort ? \"Antwort ausblenden\" : \"Antwort anzeigen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), showAntwort && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: \"1rem\",\n        fontWeight: \"bold\"\n      },\n      children: antwort\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n_s(Kontrollfrage, \"8qL5dYtdipa4gtp+qux0sO9+XBk=\");\n_c = Kontrollfrage;\nconst Kontrollfragen = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"2rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Kontrollfragen (HF1 bis HF4)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), kontrollfragen.map(frage => /*#__PURE__*/_jsxDEV(Kontrollfrage, {\n      nummer: frage.nummer,\n      frage: frage.frage,\n      antwort: frage.antwort\n    }, frage.nummer, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_c2 = Kontrollfragen;\nexport default Kontrollfragen;\nvar _c, _c2;\n$RefreshReg$(_c, \"Kontrollfrage\");\n$RefreshReg$(_c2, \"Kontrollfragen\");","map":{"version":3,"names":["React","useState","kontrollfragen","jsxDEV","_jsxDEV","Kontrollfrage","nummer","frage","antwort","_s","showAntwort","setShowAntwort","style","border","borderRadius","padding","marginBottom","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","marginTop","fontWeight","_c","Kontrollfragen","map","_c2","$RefreshReg$"],"sources":["/Users/diana/Downloads/lern-app/src/pages/Kontrollfragen.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport kontrollfragen from \"../daten/Kontrollfragen_HF1bis4.json\";\n\nconst Kontrollfrage = ({ nummer, frage, antwort }) => {\n    const [showAntwort, setShowAntwort] = useState(false);\n\n    return (\n        <div style={{\n            border: \"1px solid #ccc\",\n            borderRadius: \"8px\",\n            padding: \"1rem\",\n            marginBottom: \"1rem\",\n            backgroundColor: \"#f9f9f9\"\n        }}>\n            <h3>Frage {nummer}</h3>\n            <p>{frage}</p>\n            <button onClick={() => setShowAntwort(!showAntwort)}>\n                {showAntwort ? \"Antwort ausblenden\" : \"Antwort anzeigen\"}\n            </button>\n            {showAntwort && <p style={{ marginTop: \"1rem\", fontWeight: \"bold\" }}>{antwort}</p>}\n        </div>\n    );\n};\n\nconst Kontrollfragen = () => {\n    return (\n        <div style={{ padding: \"2rem\" }}>\n            <h2>Kontrollfragen (HF1 bis HF4)</h2>\n            {kontrollfragen.map((frage) => (\n                <Kontrollfrage\n                    key={frage.nummer}\n                    nummer={frage.nummer}\n                    frage={frage.frage}\n                    antwort={frage.antwort}\n                />\n            ))}\n        </div>\n    );\n};\n\nexport default Kontrollfragen;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,cAAc,MAAM,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,aAAa,GAAGA,CAAC;EAAEC,MAAM;EAAEC,KAAK;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAErD,oBACIG,OAAA;IAAKQ,KAAK,EAAE;MACRC,MAAM,EAAE,gBAAgB;MACxBC,YAAY,EAAE,KAAK;MACnBC,OAAO,EAAE,MAAM;MACfC,YAAY,EAAE,MAAM;MACpBC,eAAe,EAAE;IACrB,CAAE;IAAAC,QAAA,gBACEd,OAAA;MAAAc,QAAA,GAAI,QAAM,EAACZ,MAAM;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvBlB,OAAA;MAAAc,QAAA,EAAIX;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdlB,OAAA;MAAQmB,OAAO,EAAEA,CAAA,KAAMZ,cAAc,CAAC,CAACD,WAAW,CAAE;MAAAQ,QAAA,EAC/CR,WAAW,GAAG,oBAAoB,GAAG;IAAkB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC,EACRZ,WAAW,iBAAIN,OAAA;MAAGQ,KAAK,EAAE;QAAEY,SAAS,EAAE,MAAM;QAAEC,UAAU,EAAE;MAAO,CAAE;MAAAP,QAAA,EAAEV;IAAO;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjF,CAAC;AAEd,CAAC;AAACb,EAAA,CAnBIJ,aAAa;AAAAqB,EAAA,GAAbrB,aAAa;AAqBnB,MAAMsB,cAAc,GAAGA,CAAA,KAAM;EACzB,oBACIvB,OAAA;IAAKQ,KAAK,EAAE;MAAEG,OAAO,EAAE;IAAO,CAAE;IAAAG,QAAA,gBAC5Bd,OAAA;MAAAc,QAAA,EAAI;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpCpB,cAAc,CAAC0B,GAAG,CAAErB,KAAK,iBACtBH,OAAA,CAACC,aAAa;MAEVC,MAAM,EAAEC,KAAK,CAACD,MAAO;MACrBC,KAAK,EAAEA,KAAK,CAACA,KAAM;MACnBC,OAAO,EAAED,KAAK,CAACC;IAAQ,GAHlBD,KAAK,CAACD,MAAM;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIpB,CACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACO,GAAA,GAdIF,cAAc;AAgBpB,eAAeA,cAAc;AAAC,IAAAD,EAAA,EAAAG,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}